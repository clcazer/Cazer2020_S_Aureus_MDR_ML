
> #this script provides descriptive output for the manuscript
> 
> ###in abstract/intro/methods
> #number of isolates
> nrow(SA.db)
[1] 1091

> #tet-clinda resistance in SST (also cited in discussion)
> filter(all.sets_combined_boot, Category=="SA.SST", items=="Clindamycin,Tetracycline")
  Category                    items    support count csr     lift       eSup      eCSR    eLift    cLift order Classes
1   SA.SST Clindamycin,Tetracycline 0.01481481     8 0.6 1.469388 0.01495327 0.6045283 1.439481 1.505714     2     d,g
  NumClasses ClassCodes cLiftBoot0.025 cLiftBoot0.975 LiftCrosses1
1          2      LC,TE      0.6575278       2.478987         TRUE

> #were these isolates MRSA or MSSA? (cited in discussion)
> filter(SA.SST_db, Clindamycin==TRUE, Tetracycline==TRUE) %>% select(Oxacillin)
  Oxacillin
1      TRUE
2      TRUE
3     FALSE
4     FALSE
5      TRUE
6      TRUE
7      TRUE
8      TRUE

> #years covered
> min(SA.db$Study.Year)
[1] 2008

> max(SA.db$Study.Year)
[1] 2018

> ###in Results
> #number of antimicrobials with clincal breakpoints
> length(AM_include_with_bp)
[1] 28

> #number of unique AM classes
> length(unique(AM_class$Class))
[1] 13

> #overall prevalence of methicillin-resistance (from antibiogram, SupTable 1)
> filter(as.data.frame(SupTable1), Category=="Overall") %>% select("Oxa ..." ... [TRUNCATED] 
    Oxacillin
1 0.39 (1091)

> #overall prevalence of MDR (>= 3 class resistances)
> filter(mdr.classtable, !(NumClassRes %in% c("0", "1", "2"))) %>% summarize(sum=sum(NumIsolates .... [TRUNCATED] 
    sum
1 0.395

> #overall prevalence of pan-susceptible
> filter(mdr.classtable, NumClassRes=="0") %>% summarize(sum=sum(NumIsolates)/sum(mdr.classtable$NumIsolates) .... [TRUNCATED] 
    sum
1 0.133

> #five most common class resistance pattern, with cLift interval excluding 1
> filter(all.sets_combined_boot, LiftCrosses1==FALSE) %>% group_by(Class .... [TRUNCATED] 
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 5 x 3
  ClassCodes count avgcLift
  <chr>      <int>    <dbl>
1 BL,FQ,MC     134     5.00
2 FQ,MC        112     3.45
3 BL,FQ        106     4.03
4 FQ            55     5.06
5 BL,MC         38     1.52

> #BL*FQ patterns by category (e.g. pneumonia vs MRSA)
> filter(all.sets_combined_boot, LiftCrosses1==FALSE, ClassCodes=="BL,FQ") %>% group_by(Categor .... [TRUNCATED] 
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 16 x 3
   Category count avgcLift
   <fct>    <int>    <dbl>
 1 SA.pneum    21     4.82
 2 MRSA        16     1.34
 3 SA2008       7     3.90
 4 SA2009       7     4.98
 5 SA2010       7     4.50
 6 SA2011       7     5.50
 7 SA2013       7     4.68
 8 SA2014       7     3.93
 9 SA.blood     7     3.69
10 SA.SST       7     5.42
11 SA2016       3     2.69
12 SA2017       3     3.69
13 SA2018       3     4.12
14 SA.inabd     2     6.18
15 SA2012       1     2.34
16 SA2015       1     2.02

> #top 5 resistance patterns with greatest average cLift
> filter(all.sets_combined_boot, LiftCrosses1==FALSE) %>% group_by(items) %>% dplyr::summaris .... [TRUNCATED] 
`summarise()` ungrouping output (override with `.groups` argument)

> greatest.cLift
# A tibble: 5 x 4
  items                                                                         count avgcLift Categories        
  <chr>                                                                         <int>    <dbl> <chr>             
1 Gentamicin,Tetracycline,Trimethoprim.sulfamethoxazole                             2     82.5 MRSA SA.pneum     
2 Clindamycin,Telavancin,Telithromycin,Tetracycline                                 1     65.5 SA.SST            
3 Ceftaroline,Omadacycline,Trimethoprim.sulfamethoxazole                            1     64.5 MRSA              
4 Clindamycin,Telithromycin,Tetracycline                                            3     38.7 MSSA SA.SST SA2012
5 Ciprofloxacin,Clarithromycin,Erythromycin,Levofloxacin,Moxifloxacin,Oxacillin     3     25.0 MRSA SA.SST SA2010

> #demonstration of cLift calculation using ceftaroline, omadacycline, tri-sul in MRSA
> #need to calculate the conditional support--the support (%R)  .... [TRUNCATED] 
        Ceft       Omad        TMZ expected.prev num.isol.req
1 0.03409091 0.04545455 0.05681818         0.009     11357.87

> #subnetwork analysis of clinda * tet * telavancin in MSSA
> all.sets_combined_boot %>% filter(Category=="MSSA", LiftCrosses1==FALSE, str_detect(item .... [TRUNCATED] 
  Category                                  items     support count       csr       lift        eSup      eCSR    eLift
1     MSSA              Clindamycin,Telithromycin 0.025525526    17 0.5312500  20.812500 0.026073620 0.9482743 10.61359
2     MSSA Clindamycin,Telithromycin,Tetracycline 0.009009009     6 0.3695652 106.351343 0.009022556 0.6914552 52.61606
3     MSSA             Telithromycin,Tetracycline 0.009009009     6 0.3695652   5.109974 0.009287926 0.7291721  2.61423
      cLift order Classes NumClasses ClassCodes cLiftBoot0.025 cLiftBoot0.975 LiftCrosses1
1 17.473684     2     c,d          2      MC,LC      12.212632      30.729545        FALSE
2 69.755525     3   c,d,g          3   MC,LC,TE      29.580338     168.750516        FALSE
3  4.016227     2     c,g          2      MC,TE       1.722969       6.848758        FALSE

> #subnetwork analysis of ceftaroline, gentamicin, omadacycline, tri-sul in MRSA
> sub <- c("BL", "AG", "TE", "SF")

> sub.combn <- c(apply(combn(sub,2), MARGIN =2, FUN=paste, collapse=","),
+                 apply(combn(sub,3), MARGIN =2, FUN=paste, collapse=","),
+ .... [TRUNCATED] 

> all.sets_combined_boot %>% filter(Category=="MRSA", LiftCrosses1==FALSE, str_detect(items, "Ceftaroline|Gentamicin|Omadacycline|Trimethoprim.Sulfame ..." ... [TRUNCATED] 
  Category                                                  items     support count       csr      lift        eSup
1     MRSA                                 Ceftaroline,Gentamicin 0.018823529     8 0.8125000  4.086538 0.018867925
2     MRSA                               Ceftaroline,Omadacycline 0.007058824     3 0.3076923  6.129808 0.007731959
3     MRSA Ceftaroline,Omadacycline,Trimethoprim.sulfamethoxazole 0.002352941     1 0.3076923 54.274339 0.002352941
4     MRSA                                Gentamicin,Omadacycline 0.004705882     2 0.2500000  3.320313 0.004950495
5     MRSA  Gentamicin,Tetracycline,Trimethoprim.sulfamethoxazole 0.009411765     4 0.5000000 58.797201 0.009411765
6     MRSA               Gentamicin,Trimethoprim.sulfamethoxazole 0.009411765     4 0.5000000  3.320313 0.009411765
7     MRSA             Omadacycline,Trimethoprim.sulfamethoxazole 0.002352941     1 0.5000000  3.320313 0.002386635
       eCSR     eLift     cLift order Classes NumClasses ClassCodes cLiftBoot0.025 cLiftBoot0.975 LiftCrosses1
1 0.8463542  3.932329  4.049628     2     a,f          2      BL,AG       2.086626       6.800136        FALSE
2 0.7132867  2.669310 11.000000     2     a,g          2      BL,TE       4.231277      29.166667        FALSE
3 0.5907692 21.576923 64.533333     3   a,g,h          3   BL,TE,SF      26.911453     326.628720        FALSE
4 0.6036932  1.446473  4.000000     2     g,f          2      AG,TE       1.438228      10.225000        FALSE
5 0.5000000 57.967122 60.958681     3   g,f,h          3   AG,TE,SF      20.989137     125.004406        FALSE
6 0.5000000  3.320313  3.320313     2     f,h          2      AG,SF       1.072145       6.386246        FALSE
7 0.8282353  1.394690  2.200000     2     g,h          2      TE,SF       1.246181       8.450000        FALSE

> #number of resistance patterns at drug level for MRSA and MSSA after eCSR and cLift filters
> nrow(filter(all.sets_combined_boot, LiftCrosses1==FALS .... [TRUNCATED] 
[1] 120

> nrow(filter(all.sets_combined_boot, LiftCrosses1==FALSE, Category=="MSSA"))
[1] 10

> #subnetwork analysis of BL*FQ*MC by infection site
> #all possible combinations of the resistances from 2 to 3 way
> sub1 <- c("BL", "FQ", "MC")

> sub1.combn <- c(apply(combn(sub1,2), MARGIN =2, FUN=paste, collapse=","),
+                 apply(combn(sub1,3), MARGIN =2, FUN=paste, collapse=",") .... [TRUNCATED] 

> filter(all.sets_combined_boot, LiftCrosses1==FALSE, ClassCodes %in% sub1.combn, Category %in% c("SA.SST", "SA.blood", "SA.pneum")) %>% group_by(Cate .... [TRUNCATED] 
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 3 x 3
  Category n.pattern avg_cLift
  <fct>        <int>     <dbl>
1 SA.blood        39      3.51
2 SA.pneum        28      4.11
3 SA.SST          57      6.23

> #oritavancin sets did not meet eCSR P-value <=0.05
> summary(subset(SA2016_sets, items %in% "Oritavancin")) #minimum Pval.eCSR = 0.78
set of 255 itemsets

most frequent items:
 Oritavancin Azithromycin  Clindamycin Erythromycin Levofloxacin      (Other) 
         255          128          128          128          128          512 

element (itemset/transaction) length distribution:sizes
 2  3  4  5  6  7  8  9 
 8 28 56 70 56 28  8  1 

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  2.000   4.000   5.000   5.016   6.000   9.000 

summary of quality measures:
    support           count   CrossSupRatio          lift               eSup             eCSR             eLift         
 Min.   :0.0122   Min.   :1   Min.   :0.01471   Min.   :   1.206   Min.   :0.0122   Min.   :0.01471   Min.   :   1.206  
 1st Qu.:0.0122   1st Qu.:1   1st Qu.:0.01471   1st Qu.:  24.821   1st Qu.:0.0122   1st Qu.:0.01471   1st Qu.:  14.287  
 Median :0.0122   Median :1   Median :0.01471   Median : 101.846   Median :0.0122   Median :0.01471   Median :  45.955  
 Mean   :0.0122   Mean   :1   Mean   :0.02118   Mean   : 490.623   Mean   :0.0122   Mean   :0.01982   Mean   : 132.920  
 3rd Qu.:0.0122   3rd Qu.:1   3rd Qu.:0.02174   3rd Qu.: 401.891   3rd Qu.:0.0122   3rd Qu.:0.02174   3rd Qu.: 143.609  
 Max.   :0.0122   Max.   :1   Max.   :0.16667   Max.   :9830.966   Max.   :0.0122   Max.   :0.07520   Max.   :2001.575  
     cLift            Pval.eCSR         Pval.CSR        Pval.eLift        Pval.lift         Pval.cLift     
 Min.   :   1.206   Min.   :0.7800   Min.   :0.4800   Min.   :0.00000   Min.   :0.00000   Min.   :0.00000  
 1st Qu.:  13.450   1st Qu.:0.9800   1st Qu.:0.9700   1st Qu.:0.01350   1st Qu.:0.01400   1st Qu.:0.02200  
 Median :  39.909   Median :1.0000   Median :1.0000   Median :0.04600   Median :0.05000   Median :0.06000  
 Mean   :  95.409   Mean   :0.9806   Mean   :0.9718   Mean   :0.07423   Mean   :0.08725   Mean   :0.08553  
 3rd Qu.:  98.712   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.11000   3rd Qu.:0.12000   3rd Qu.:0.11500  
 Max.   :1185.412   Max.   :1.0000   Max.   :1.0000   Max.   :0.51000   Max.   :0.66000   Max.   :0.63000  

includes transaction ID lists: FALSE 

mining info:
 data ntransactions    support confidence
 data            82 0.01219512          1

> ###Discussion
> #number of non-MDR MRSA and MSSA phenotypes
> sum(m.mdr.classtable[which(m.mdr.classtable$NumClassRes %in% c("0", "1", "2") & m.mdr. .... [TRUNCATED] 
[1] 5

> sum(m.mdr.classtable[which(m.mdr.classtable$NumClassRes %in% c("0", "1", "2") & m.mdr.classtable$Category=="MSSA"),"NumUniqPatterns"])
[1] 19

> #diversity of class phenotypes and 3-class resistance patterns in MDR MRSA and MSSA
> filter(m.mdr.classtable, !(NumClassRes %in% c("0", "1", "2"))) .... [TRUNCATED] 
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Category MDR.uniq.pheno
  <fct>             <int>
1 MRSA                 29
2 MSSA                 23

> filter(all.sets_combined_boot, LiftCrosses1==FALSE, NumClasses==3, Category %in% c("MRSA", "MSSA")) %>% group_by(Category) %>% dplyr::summarise(Num3 .... [TRUNCATED] 
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 2 x 2
  Category Num3ClassPatterns
  <fct>                <int>
1 MRSA                    64
2 MSSA                     1

> #six-class and seven-class phenotypes in MRSA
> filter(m.mdr.classtable, (NumClassRes %in% c("6", "7")) & Category=="MRSA")
  NumClassRes Category NumIsolates NumUniqPatterns
1           6     MRSA          11               6
2           7     MRSA           4               2

> #the specific patterns for six-class and seven-class MRSA phenotypes
> mrsa.index <- SA.db[,"Oxacillin"]==TRUE #MRSA isolate index in whole dataset

> mrsa.6.7 <- filter(MDRprofiles[mrsa.index,], NumClass %in% c("6", "7"))

> mrsa.index.6.7 <- mrsa.index & MDRprofiles[, "NumClass"] %in% c("6", "7") #index of the six-class and seven-class MRSA isolates

> Reduce(intersect, lapply(mrsa.6.7$Classes.sort, unlist)) #the 6-class and 7-class MRSA isolates...
[1] "a" "b" "c"

> #have a background of B-lactam (a), FQ (b), macrolide (c) resistance (common to all)
> 
> #false negatives explain why not all expected cross-resist .... [TRUNCATED] 
   Penicillin
1        TRUE
2        TRUE
3        TRUE
4        TRUE
5        TRUE
6        TRUE
7        TRUE
8        TRUE
9        TRUE
10       TRUE
11       TRUE
12       TRUE
13       TRUE
14       TRUE
15       TRUE
16       TRUE
17       TRUE
18       TRUE
19       TRUE

> ##eCSR P-val of ertapenem-penicillin sets all > 0.05
> summary(subset(MRSA_sets, items %ain% c("Ertapenem", "Penicillin")))@quality
    support             count        CrossSupRatio           lift                eSup               eCSR         
 Min.   :0.002353   Min.   : 1.000   Min.   :0.004706   Min.   :    0.796   Min.   :0.002358   Min.   :0.004902  
 1st Qu.:0.002353   1st Qu.: 1.000   1st Qu.:0.005249   1st Qu.:    6.970   1st Qu.:0.002364   1st Qu.:0.004902  
 Median :0.002353   Median : 1.000   Median :0.044706   Median :   28.635   Median :0.002445   Median :0.063726  
 Mean   :0.008041   Mean   : 3.418   Mean   :0.031400   Mean   :  751.057   Mean   :0.013422   Mean   :0.074784  
 3rd Qu.:0.011765   3rd Qu.: 5.000   3rd Qu.:0.049869   3rd Qu.:  233.076   3rd Qu.:0.012225   3rd Qu.:0.075294  
 Max.   :0.044706   Max.   :19.000   Max.   :0.050938   Max.   :17790.146   Max.   :0.395833   Max.   :0.395833  
     eLift               cLift            Pval.eCSR         Pval.CSR        Pval.eLift       Pval.lift     
 Min.   :   0.0849   Min.   :  0.9675   Min.   :0.0600   Min.   :0.5800   Min.   :0.0000   Min.   :0.0010  
 1st Qu.:   0.6599   1st Qu.:  2.9576   1st Qu.:0.4100   1st Qu.:0.6000   1st Qu.:0.0480   1st Qu.:0.0410  
 Median :   2.3353   Median :  6.7519   Median :0.5200   Median :0.6700   Median :0.1800   Median :0.1150  
 Mean   :  54.6257   Mean   : 21.6894   Mean   :0.6323   Mean   :0.7652   Mean   :0.2808   Mean   :0.1666  
 3rd Qu.:  16.9757   3rd Qu.: 15.4676   3rd Qu.:0.9900   3rd Qu.:0.9800   3rd Qu.:0.5125   3rd Qu.:0.2300  
 Max.   :1093.9530   Max.   :242.1570   Max.   :0.9900   Max.   :0.9800   Max.   :0.9300   Max.   :0.8800  
   Pval.cLift    
 Min.   :0.0120  
 1st Qu.:0.0900  
 Median :0.1600  
 Mean   :0.2089  
 3rd Qu.:0.2800  
 Max.   :0.7700  

> summary(subset(SA.SST_sets, items %ain% c("Ertapenem", "Penicillin")))@quality
    support             count       CrossSupRatio          lift                eSup               eCSR        
 Min.   :0.001852   Min.   :1.000   Min.   :0.01485   Min.   :     1.34   Min.   :0.001859   Min.   :0.01836  
 1st Qu.:0.001852   1st Qu.:1.000   1st Qu.:0.01485   1st Qu.:    54.00   1st Qu.:0.001873   1st Qu.:0.01836  
 Median :0.003704   Median :2.000   Median :0.01485   Median :   341.27   Median :0.003781   Median :0.05231  
 Mean   :0.003718   Mean   :2.008   Mean   :0.01485   Mean   :  5656.99   Mean   :0.004474   Mean   :0.06701  
 3rd Qu.:0.003704   3rd Qu.:2.000   3rd Qu.:0.01485   3rd Qu.:  2660.74   3rd Qu.:0.004028   3rd Qu.:0.10096  
 Max.   :0.011111   Max.   :6.000   Max.   :0.01485   Max.   :219412.23   Max.   :0.061856   Max.   :0.14504  
     eLift               cLift            Pval.eCSR         Pval.CSR     Pval.eLift        Pval.lift      
 Min.   :    0.288   Min.   :   1.119   Min.   :0.3900   Min.   :0.9   Min.   :0.00000   Min.   :0.00000  
 1st Qu.:    3.635   1st Qu.:  10.382   1st Qu.:0.5475   1st Qu.:0.9   1st Qu.:0.02075   1st Qu.:0.01600  
 Median :   19.969   Median :  40.091   Median :0.7500   Median :0.9   Median :0.08000   Median :0.06000  
 Mean   :  289.691   Mean   : 201.016   Mean   :0.6975   Mean   :0.9   Mean   :0.15236   Mean   :0.08484  
 3rd Qu.:  158.093   3rd Qu.: 172.449   3rd Qu.:0.9000   3rd Qu.:0.9   3rd Qu.:0.19250   3rd Qu.:0.12000  
 Max.   :10199.668   Max.   :3668.093   Max.   :0.9000   Max.   :0.9   Max.   :0.82000   Max.   :0.64000  
   Pval.cLift     
 Min.   :0.00200  
 1st Qu.:0.03425  
 Median :0.09000  
 Mean   :0.12161  
 3rd Qu.:0.18000  
 Max.   :0.69000  

> summary(subset(SA.blood_sets, items %ain% c("Ertapenem", "Penicillin")))@quality
    support             count       CrossSupRatio          lift               eSup               eCSR        
 Min.   :0.004167   Min.   :1.000   Min.   :0.01136   Min.   :     1.4   Min.   :0.004167   Min.   :0.01023  
 1st Qu.:0.004167   1st Qu.:1.000   1st Qu.:0.01136   1st Qu.:    55.3   1st Qu.:0.004167   1st Qu.:0.01023  
 Median :0.004167   Median :1.000   Median :0.04545   Median :   245.8   Median :0.004237   Median :0.04091  
 Mean   :0.008523   Mean   :2.045   Mean   :0.03306   Mean   :  9401.2   Mean   :0.009761   Mean   :0.07605  
 3rd Qu.:0.012500   3rd Qu.:3.000   3rd Qu.:0.04545   3rd Qu.:  1735.0   3rd Qu.:0.012766   3rd Qu.:0.06648  
 Max.   :0.033333   Max.   :8.000   Max.   :0.04545   Max.   :623108.7   Max.   :0.117647   Max.   :0.29752  
     eLift              cLift            Pval.eCSR         Pval.CSR        Pval.eLift       Pval.lift      
 Min.   :    0.41   Min.   :   1.179   Min.   :0.2900   Min.   :0.8000   Min.   :0.0000   Min.   :0.00000  
 1st Qu.:    6.44   1st Qu.:  14.947   1st Qu.:0.6700   1st Qu.:0.8000   1st Qu.:0.0100   1st Qu.:0.00400  
 Median :   27.89   Median :  38.020   Median :0.8600   Median :0.8000   Median :0.0465   Median :0.01900  
 Mean   :  949.73   Mean   : 221.510   Mean   :0.7814   Mean   :0.8691   Mean   :0.1071   Mean   :0.04504  
 3rd Qu.:  184.83   3rd Qu.: 131.704   3rd Qu.:1.0000   3rd Qu.:0.9900   3rd Qu.:0.1400   3rd Qu.:0.06000  
 Max.   :57634.14   Max.   :6919.668   Max.   :1.0000   Max.   :0.9900   Max.   :0.8500   Max.   :0.62000  
   Pval.cLift     
 Min.   :0.00000  
 1st Qu.:0.01900  
 Median :0.06000  
 Mean   :0.08367  
 3rd Qu.:0.12000  
 Max.   :0.68000  

> summary(subset(SA.pneum_sets, items %ain% c("Ertapenem", "Penicillin")))@quality
    support             count      CrossSupRatio          lift                eSup               eCSR        
 Min.   :0.004630   Min.   :1.00   Min.   :0.02564   Min.   :     1.38   Min.   :0.004630   Min.   :0.04861  
 1st Qu.:0.004630   1st Qu.:1.00   1st Qu.:0.02564   1st Qu.:    66.66   1st Qu.:0.004662   1st Qu.:0.04861  
 Median :0.004630   Median :1.00   Median :0.02564   Median :   298.60   Median :0.004796   Median :0.04872  
 Mean   :0.008102   Mean   :1.75   Mean   :0.02564   Mean   :  4655.60   Mean   :0.009877   Mean   :0.10704  
 3rd Qu.:0.008102   3rd Qu.:1.75   3rd Qu.:0.02564   3rd Qu.:  1648.34   3rd Qu.:0.008859   3rd Qu.:0.08794  
 Max.   :0.018519   Max.   :4.00   Max.   :0.02564   Max.   :191279.72   Max.   :0.105263   Max.   :0.35897  
     eLift              cLift            Pval.eCSR         Pval.CSR      Pval.eLift        Pval.lift         Pval.cLift    
 Min.   :   0.243   Min.   :   1.083   Min.   :0.2000   Min.   :0.95   Min.   :0.00000   Min.   :0.00000   Min.   :0.0040  
 1st Qu.:   3.135   1st Qu.:   7.581   1st Qu.:0.7225   1st Qu.:0.95   1st Qu.:0.04375   1st Qu.:0.01200   1st Qu.:0.0565  
 Median :  11.792   Median :  17.266   Median :0.8500   Median :0.95   Median :0.13000   Median :0.04200   Median :0.1300  
 Mean   : 149.348   Mean   :  79.244   Mean   :0.7050   Mean   :0.95   Mean   :0.20361   Mean   :0.07206   Mean   :0.1542  
 3rd Qu.:  69.336   3rd Qu.:  64.188   3rd Qu.:0.8500   3rd Qu.:0.95   3rd Qu.:0.26250   3rd Qu.:0.10000   3rd Qu.:0.2200  
 Max.   :5365.858   Max.   :1027.377   Max.   :0.8500   Max.   :0.95   Max.   :0.91000   Max.   :0.65000   Max.   :0.7400  

> #association sets recovered from most common resistance phenotypes (Table2)
> common.pheno <- names(sort(table(MDRprofiles$Profile), decreasing=TRUE .... [TRUNCATED] 

> common.pheno <- gsub("\\s+", ",", gsub("^\\s+|\\s+$", "", common.pheno))

> #common resistance phenotypes recovered exactly
> recovered1 <- common.pheno %in% filter(all.sets_combined_boot, LiftCrosses1==FALSE)$items

> #common resistance phenotypes recovered from MRSA, excluding oxacillin because that was excluded from MRSA sets but all MRSA isolates are oxacillin- .... [TRUNCATED] 

> #recovered subsets from common resistance phenotypes
> full <- str_split(common.pheno, ",") #need pattern as vector with each element = 1 AM

> sets <- str_split(filter(all.sets_combined_boot, LiftCrosses1==FALSE)$items, ",") #need sets as vector with each element = 1 AM

> recovered3 <- NULL

> for (i in 1:length(common.pheno)){ #for each full phenotype
+ compare <- sapply(sets, function(x) x %in% full[[i]]) #compare elements of full phenot .... [TRUNCATED] 

> #recovered3 becomes the third column of Table 2
> 
> #table of top MDR profiles (typical MDR analysis) = table 2
> table2 <- MDRprofiles$Profile

> table2[nchar(table2)==0] <- "Pan-Susceptible"

> table2 <- cbind(as.data.frame(sort(table(table2), decreasing=TRUE)[1:20]),recovered3) #bind to recovered 3

> colnames(table2) <- c("Resistance_Phenotype", "n", "Recovered_Resistance_Pattern") #name columns

> table2$Recovered_Resistance_Pattern <- dplyr::recode(as.character(table2$Recovered_Resistance_Pattern), "TRUE"="Yes", "FALSE"="No") #relabel recover .... [TRUNCATED] 

> table2$Recovered_Resistance_Pattern[!str_detect(table2$Resistance_Phenotype, " ")] <- "*" #if pattern is <2 antimicrobials, pattern cannot be recove .... [TRUNCATED] 

> AM_abbreviation_replace <- unlist(as.character(AM_class$Abbreviation))#for turning long AM name to abbreviation with str_replace

> names(AM_abbreviation_replace) <- as.character(AM_class$AM)

> table2$Resistance_Phenotype <- str_replace_all(as.character(table2$Resistance_Phenotype), AM_abbreviation_replace) #use AM abbreviations

> table2$Resistance_Phenotype <- gsub("\\s+",", ",table2$Resistance_Phenotype) #trim ws between abbreviations

> write.xlsx(table2, "results/Table 2_most common MDR phenotypes.xlsx", row.names=FALSE)

> #number of common resistance phenotypes
> length(recovered3)
[1] 20

> #number of common resistance phenotypes with at least a partial set recovered
> sum(recovered3)
[1] 16

> #erythromycin*penicillin sets
> #number of common phenotypes with erythromycin*penicillin
> sum(colSums(sapply(full, function(x) c("Erythromycin", " ..." ... [TRUNCATED] 
[1] 11

> #cLift in MRSA, bloodstream, SST
> filter(MRSA_MSSA_edges, edgeName=="Erythromycin Penicillin") %>% select(cat, cLift)
   cat    cLift
1 MRSA 1.506581

> filter(type_edges, edgeName=="Erythromycin Penicillin") %>% select(cat, cLift)
       cat    cLift
1 SA.blood 1.700080
2 SA.pneum 1.344759
3   SA.SST 1.508177

> #erythromycin*oxacillin trends
> filter(SA_edges, edgeName=="Erythromycin Oxacillin") %>% select(cat, cLift)
     cat    cLift
1 SA2008 6.022156
2 SA2010 8.789541
3 SA2011 7.963988
4 SA2014 2.054082
5 SA2015 1.659234

> #Trisul-tetracycline resistance in MRSA
> filter(all.sets_combined_boot, Category=="MRSA", items=="Tetracycline,Trimethoprim.sulfamethoxazole")
  Category                                      items     support count       csr     lift        eSup      eCSR    eLift
1     MRSA Tetracycline,Trimethoprim.sulfamethoxazole 0.009411765     4 0.6666667 4.427083 0.009433962 0.6572549 4.374877
     cLift order Classes NumClasses ClassCodes cLiftBoot0.025 cLiftBoot0.975 LiftCrosses1
1 4.655556     2     g,h          2      TE,SF       1.463432       9.547721        FALSE

> #number of potential association sets
> 2^(nrow(AM_class))-1
[1] 268435455

> sink()
